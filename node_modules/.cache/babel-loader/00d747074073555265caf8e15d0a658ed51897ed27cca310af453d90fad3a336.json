{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\mailsolution\\\\src\\\\EmailExtractor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailExtractor = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [inputText, setInputText] = useState('');\n\n  // Regular expression to match email patterns\n  const extractEmail = text => {\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi;\n    const result = text.match(emailRegex);\n    return result ? result[0] : 'No email found';\n  };\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleExtractEmail = () => {\n    const extractedEmail = extractEmail(inputText);\n    setEmail(extractedEmail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      value: inputText,\n      onChange: handleInputChange,\n      placeholder: \"Paste or type some text here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExtractEmail,\n      children: \"Extract Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailExtractor, \"NhJDAkavFaxgdu05emHAx3jYLlQ=\");\n_c = EmailExtractor;\nexport default EmailExtractor;\nvar _c;\n$RefreshReg$(_c, \"EmailExtractor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmailExtractor","_s","email","setEmail","inputText","setInputText","extractEmail","text","emailRegex","result","match","handleInputChange","e","target","value","handleExtractEmail","extractedEmail","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/mailsolution/src/EmailExtractor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst EmailExtractor = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  // Regular expression to match email patterns\r\n  const extractEmail = (text) => {\r\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi;\r\n    const result = text.match(emailRegex);\r\n    return result ? result[0] : 'No email found';\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleExtractEmail = () => {\r\n    const extractedEmail = extractEmail(inputText);\r\n    setEmail(extractedEmail);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Email Extractor</h2>\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Paste or type some text here\"\r\n      />\r\n      <br />\r\n      <button onClick={handleExtractEmail}>Extract Email</button>\r\n      <p>Email: {email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailExtractor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMS,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,UAAU,GAAG,sDAAsD;IACzE,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAK,CAACF,UAAU,CAAC;IACrC,OAAOC,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB;EAC9C,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/BP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,cAAc,GAAGV,YAAY,CAACF,SAAS,CAAC;IAC9CD,QAAQ,CAACa,cAAc,CAAC;EAC1B,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MACEuB,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,IAAI;MACTT,KAAK,EAAEV,SAAU;MACjBoB,QAAQ,EAAEb,iBAAkB;MAC5Bc,WAAW,EAAC;IAA8B;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MAAQ2B,OAAO,EAAEX,kBAAmB;MAAAE,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DtB,OAAA;MAAAkB,QAAA,GAAG,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}